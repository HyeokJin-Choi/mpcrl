0) 준비 체크 (라즈베리파이)
# 64bit OS 권장 (arm64)
uname -m         # aarch64 라면 OK (armv7l이면 32bit → casadi/과학계열 패키지 설치가 더 까다로움)

# 시스템 업데이트
sudo apt update && sudo apt -y full-upgrade

# 시간/로케일(선택) – 한국 표준시
sudo timedatectl set-timezone Asia/Seoul


1) 필수 패키지 설치
# Python 3.11 + venv, 빌드 도구, BLAS 등
sudo apt install -y python3.11 python3.11-venv python3.11-dev \
    build-essential gfortran libopenblas-dev libatlas3-base \
    git pkg-config

# (선택) 장시간 학습 대비: tmux
sudo apt install -y tmux


2) 프로젝트 디렉터리 & 가상환경
mkdir -p ~/checkjin
cd ~/checkjin

python3.11 -m venv .venv311
source .venv311/bin/activate

python -m pip install --upgrade pip setuptools wheel



3) 레포 받기 (두 가지 방법 중 하나)
방법 A) 원본 레포 그대로 클론
cd ~/checkjin
git clone https://github.com/SamuelMallick/mpcrl-greenhouse.git
cd mpcrl-greenhouse


4) 파이썬 의존성 설치
# 가상환경 활성화되어 있어야 함
source ~/checkjin/.venv311/bin/activate
cd ~/checkjin/mpcrl-greenhouse

# 먼저 기본 업그레이드
pip install --upgrade pip setuptools wheel

# 보통 이렇게 한 번에 끝나지만,
# casadi에서 에러 나면 아래 '설치 트러블슈팅' 참고
pip install -r requirements.txt

pip install "casadi>=3.6,<3.7"


5) 네가 WSL에서 하던 “안전 옵션/치환” 그대로 적용
# ipopt.opt 생성
cd ~/checkjin/mpcrl-greenhouse
cat > ipopt.opt <<'EOF'
print_level 0
linear_solver mumps
hessian_approximation limited-memory
tol 1e-6
EOF

# 레포 내부에서 ipopt 옵션 블록 안전치환 (필요 시)
cp mpcs/learning.py mpcs/learning.py.bak
cp mpcs/sample_based.py mpcs/sample_based.py.bak
cp mpcs/nominal.py mpcs/nominal.py.bak

perl -0777 -i -pe 's/"ipopt":\s*\{.*?\}/"ipopt": {\n    \"print_level\": 0,\n    \"linear_solver\": \"mumps\",\n    \"hessian_approximation\": \"limited-memory\",\n\n    \"mu_strategy\": \"adaptive\",\n    \"tol\": 1e-5,\n    \"acceptable_tol\": 1e-2,\n    \"acceptable_iter\": 10,\n    \"max_iter\": 2000\n}/s' mpcs/learning.py mpcs/sample_based.py mpcs/nominal.py

sed -i -E 's/"print_time"[[:space:]]*:[[:space:]]*[0-9]+/"print_time": 0/g' mpcs/learning.py mpcs/sample_based.py mpcs/nominal.py

# greenhouse_agent.py 리턴 안전화 패치 (네가 쓰던 것)
sed -i -E 's/return None if stats\["success"\] else stats\["return_status"\]/return None if (stats is None or (isinstance(stats, dict) and stats.get("success", False))) else (stats.get("return_status","UpdateFailed") if isinstance(stats, dict) else stats)/' agents/greenhouse_agent.py

python -m py_compile agents/greenhouse_agent.py




10) WSL에서 쓰던 “재접속/확인” 명령 그대로
# 재접속 시
source ~/checkjin/.venv311/bin/activate
cd ~/checkjin/mpcrl-greenhouse

# 확인
which python
python -V
pip list




mpcrl의 초기화에서 numba를 안 쓰도록 패치 + RL테스트
source ~/checkjin/.venv311/bin/activate

python - <<'PY'
import sysconfig, os, re

site = sysconfig.get_paths()['purelib']
init = os.path.join(site, 'mpcrl', '__init__.py')

with open(init, 'r', encoding='utf-8') as f:
    src = f.read()

# lstd_dpg를 즉시 임포트하는 줄을 "지연 임포트" 함수로 바꿈
patched = re.sub(
    r'^\s*from\s+\.agents\.lstd_dpg\s+import\s+LstdDpgAgent\s*$',
    "# RPi armv7 workaround: lazy import to avoid numba at import time\n"
    "# from .agents.lstd_dpg import LstdDpgAgent\n"
    "def LstdDpgAgent(*args, **kwargs):\n"
    "    from .agents.lstd_dpg import LstdDpgAgent as _A\n"
    "    return _A(*args, **kwargs)\n",
    src,
    flags=re.M
)

if patched == src:
    print("⚠️ 패치할 라인을 못 찾음. 파일 위치/내용을 확인하세요:", init)
else:
    with open(init + '.bak', 'w', encoding='utf-8') as f:
        f.write(src)
    with open(init, 'w', encoding='utf-8') as f:
        f.write(patched)
    print("✅ 패치 완료:", init)
PY

# import가 통과되는지 확인
python -c "import mpcrl; print('mpcrl import OK')"

# 바로 실행
cd ~/checkjin/mpcrl-greenhouse

cat > ipopt.opt <<'EOF'
print_level 0
linear_solver mumps
hessian_approximation limited-memory
tol 1e-6
EOF

python -u q_learning_greenhouse.py | tee run.log




게다가 llvmlite의 Python 3.11 지원 자체는 0.40부터 있지만(기능적으로는 가능), 라즈베리파이 32-bit용 사전 빌드 휠이 없기 때문에 현실적으로 실패
cd ~/checkjin
rm -rf .venv311
python3.11 -m venv .venv311
source .venv311/bin/activate
pip install -U pip setuptools wheel

sudo apt update
sudo apt install -y cmake build-essential pkg-config \
  libjpeg-dev zlib1g-dev libtiff5-dev libfreetype6-dev \
  liblcms2-dev libwebp-dev libopenjp2-7-dev libpng-dev libxcb1-dev

pip install --only-binary=:all: "pillow>=10,<12"

# 4-1 기본셋
pip install "numpy==1.26.4" "scipy==1.13.1" "matplotlib==3.9.0" "gymnasium==0.29.1"

# 4-2 casadi (휠 있음)
pip install "casadi==3.6.5"

# 4-3 csnlp, mpcrl 설치 시 numba가 따라오면 --no-deps로 설치
pip install "csnlp==1.5.11rc4" || pip install --no-deps "csnlp==1.5.11rc4"
pip install "mpcrl==1.2.1rc4"  || pip install --no-deps "mpcrl==1.2.1rc4"




[SIM] PUB combined: {"temp": 24.02, "hum": 74.33, "co2": 482.3, "light": 561.8, "ts": 1760613791}
[SIM] PUB combined: {"temp": 22.15, "hum": 75.48, "co2": 893.9, "light": 272.8, "ts": 1760613796}
[SIM] PUB combined: {"temp": 21.83, "hum": 55.59, "co2": 447.6, "light": 588.4, "ts": 1760613801}
[SIM] PUB combined: {"temp": 24.14, "hum": 74.78, "co2": 495.9, "light": 449.2, "ts": 1760613806}
[SIM] PUB combined: {"temp": 22.35, "hum": 58.61, "co2": 842.6, "light": 574.7, "ts": 1760613811}
[SIM] PUB combined: {"temp": 24.23, "hum": 78.68, "co2": 846.7, "light": 485.9, "ts": 1760613816}
[SIM] PUB combined: {"temp": 23.42, "hum": 73.92, "co2": 623.7, "light": 585.1, "ts": 1760613821}
[SIM] PUB combined: {"temp": 24.56, "hum": 73.75, "co2": 537.4, "light": 190.2, "ts": 1760613826}
[SIM] PUB combined: {"temp": 26.74, "hum": 52.13, "co2": 858.1, "light": 454.4, "ts": 1760613831}
[SIM] PUB combined: {"temp": 21.13, "hum": 54.63, "co2": 659.6, "light": 253.3, "ts": 1760613836}
[SIM] PUB combined: {"temp": 26.5, "hum": 61.77, "co2": 898.4, "light": 296.4, "ts": 1760613841}
[SIM] PUB combined: {"temp": 20.34, "hum": 74.04, "co2": 758.6, "light": 477.9, "ts": 1760613846}
[SIM] PUB combined: {"temp": 24.17, "hum": 64.86, "co2": 508.5, "light": 284.1, "ts": 1760613851}
[SIM] PUB combined: {"temp": 20.6, "hum": 69.11, "co2": 659.3, "light": 529.2, "ts": 1760613856}
[SIM] PUB combined: {"temp": 24.42, "hum": 72.28, "co2": 564.1, "light": 534.5, "ts": 1760613861}
[SIM] PUB combined: {"temp": 21.69, "hum": 65.19, "co2": 796.5, "light": 588.8, "ts": 1760613866}
[SIM] PUB combined: {"temp": 23.61, "hum": 54.78, "co2": 682.4, "light": 351.9, "ts": 1760613871}
[SIM] PUB combined: {"temp": 20.6, "hum": 77.63, "co2": 909.2, "light": 550.0, "ts": 1760613876}
[SIM] PUB combined: {"temp": 23.27, "hum": 77.49, "co2": 643.0, "light": 290.3, "ts": 1760613881}
[SIM] PUB combined: {"temp": 22.17, "hum": 64.97, "co2": 891.4, "light": 445.8, "ts": 1760613886}
[SIM] PUB combined: {"temp": 22.65, "hum": 72.13, "co2": 550.7, "light": 381.1, "ts": 1760613891}
[SIM] PUB combined: {"temp": 19.38, "hum": 75.89, "co2": 883.7, "light": 394.6, "ts": 1760613896}
[SIM] PUB combined: {"temp": 23.15, "hum": 78.32, "co2": 436.6, "light": 214.5, "ts": 1760613901}
[SIM] PUB combined: {"temp": 25.39, "hum": 67.92, "co2": 687.7, "light": 323.7, "ts": 1760613906}
[SIM] PUB combined: {"temp": 24.36, "hum": 60.74, "co2": 459.5, "light": 335.1, "ts": 1760613911}
[SIM] PUB combined: {"temp": 24.09, "hum": 66.2, "co2": 530.1, "light": 343.0, "ts": 1760613916}
[SIM] PUB combined: {"temp": 20.82, "hum": 69.68, "co2": 428.2, "light": 103.6, "ts": 1760613921}






[MON] farm/greenhouse/actuators/co2_valve  ←  {'value': 4.339999999999998, 'ts': 1760612577}
[MON] farm/greenhouse/actuators/led  ←  {'value': -8.01, 'ts': 1760612577}
[MON] farm/greenhouse/actuators/heater  ←  {'value': -0.577, 'ts': 1760612637}
[MON] farm/greenhouse/actuators/humidifier  ←  {'value': -0.4340000000000004, 'ts': 1760612637}
[MON] farm/greenhouse/actuators/co2_valve  ←  {'value': 3.319999999999999, 'ts': 1760612637}
[MON] farm/greenhouse/actuators/led  ←  {'value': 2.3849999999999993, 'ts': 1760612637}
[MON] farm/greenhouse/actuators/heater  ←  {'value': -0.509, 'ts': 1760612692}
[MON] farm/greenhouse/actuators/humidifier  ←  {'value': 0.1729999999999997, 'ts': 1760612692}
[MON] farm/greenhouse/actuators/co2_valve  ←  {'value': -7.855000000000001, 'ts': 1760612692}
[MON] farm/greenhouse/actuators/led  ←  {'value': 8.11, 'ts': 1760612692}
[MON] farm/greenhouse/actuators/heater  ←  {'value': 0.0, 'ts': 1760613421}
[MON] farm/greenhouse/actuators/humidifier  ←  {'value': 0.0, 'ts': 1760613421}
[MON] farm/greenhouse/actuators/co2_valve  ←  {'value': 0.0, 'ts': 1760613421}
[MON] farm/greenhouse/actuators/led  ←  {'value': 1.0, 'ts': 1760613421}
[MON] farm/greenhouse/actuators/heater  ←  {'value': 0.15500000000000008, 'ts': 1760613702}
[MON] farm/greenhouse/actuators/humidifier  ←  {'value': 0.0, 'ts': 1760613702}
[MON] farm/greenhouse/actuators/co2_valve  ←  {'value': 0.0, 'ts': 1760613702}
[MON] farm/greenhouse/actuators/led  ←  {'value': 1.0, 'ts': 1760613702}
[MON] farm/greenhouse/actuators/heater  ←  {'value': 0.0, 'ts': 1760613762}
[MON] farm/greenhouse/actuators/humidifier  ←  {'value': 0.0, 'ts': 1760613762}
[MON] farm/greenhouse/actuators/co2_valve  ←  {'value': 0.5550000000000012, 'ts': 1760613762}
[MON] farm/greenhouse/actuators/led  ←  {'value': 1.0, 'ts': 1760613762}
[MON] farm/greenhouse/actuators/heater  ←  {'value': 0.0, 'ts': 1760613822}
[MON] farm/greenhouse/actuators/humidifier  ←  {'value': 0.0, 'ts': 1760613822}
[MON] farm/greenhouse/actuators/co2_valve  ←  {'value': 1.0, 'ts': 1760613822}
[MON] farm/greenhouse/actuators/led  ←  {'value': 0.0, 'ts': 1760613822}
[MON] farm/greenhouse/actuators/heater  ←  {'value': 0.0, 'ts': 1760613882}
[MON] farm/greenhouse/actuators/humidifier  ←  {'value': 0.0, 'ts': 1760613882}
[MON] farm/greenhouse/actuators/co2_valve  ←  {'value': 0.35000000000000003, 'ts': 1760613882}
[MON] farm/greenhouse/actuators/led  ←  {'value': 1.0, 'ts': 1760613882}









(.venv311) rasp@raspberrypi:~/checkjin/mpcrl/project_mpcrl $ python mpc_mqtt.py 
/home/rasp/checkjin/mpcrl/project_mpcrl/mpc_mqtt.py:422: DeprecationWarning: Callback API version 1 is deprecated, update to latest version
  client = mqtt.Client(client_id=CLIENT_ID, protocol=mqtt.MQTTv5)
[MPC] Init start
[MQTT] Connected reasonCode=Success
[MPC][WARN] cannot set 'V0' via known APIs; skipped.
[MPC][WARN] cannot set 'c_dy' via known APIs; skipped.
[MPC][WARN] cannot set 'w' via known APIs; skipped.
[MPC][WARN] cannot set 'olb' via known APIs; skipped.
[MPC][WARN] cannot set 'oub' via known APIs; skipped.
[MPC][WARN] cannot set 'y_fin' via known APIs; skipped.
[MPC][WARN] cannot set 'c_y' via known APIs; skipped.
[MPC][WARN] cannot set 'c_u' via known APIs; skipped.
[MPC][WARN] cannot set 'p_0' via known APIs; skipped.
[MPC][WARN] cannot set 'p_1' via known APIs; skipped.
[MPC][WARN] cannot set 'p_2' via known APIs; skipped.
[MPC][WARN] cannot set 'p_3' via known APIs; skipped.
[MPC][WARN] cannot set 'p_4' via known APIs; skipped.
[MPC][WARN] cannot set 'p_5' via known APIs; skipped.
[MPC][WARN] cannot set 'p_6' via known APIs; skipped.
[MPC][WARN] cannot set 'p_7' via known APIs; skipped.
[MPC][WARN] cannot set 'p_8' via known APIs; skipped.
[MPC][WARN] cannot set 'p_9' via known APIs; skipped.
[MPC][WARN] cannot set 'p_10' via known APIs; skipped.
[MPC][WARN] cannot set 'p_11' via known APIs; skipped.
[MPC][WARN] cannot set 'p_12' via known APIs; skipped.
[MPC][WARN] cannot set 'p_13' via known APIs; skipped.
[MPC][WARN] cannot set 'p_14' via known APIs; skipped.
[MPC][WARN] cannot set 'p_15' via known APIs; skipped.
[MPC][WARN] cannot set 'p_16' via known APIs; skipped.
[MPC][WARN] cannot set 'p_17' via known APIs; skipped.
[MPC][WARN] cannot set 'p_18' via known APIs; skipped.
[MPC][WARN] cannot set 'p_19' via known APIs; skipped.
[MPC][WARN] cannot set 'p_20' via known APIs; skipped.
[MPC][WARN] cannot set 'p_21' via known APIs; skipped.
[MPC][WARN] cannot set 'p_22' via known APIs; skipped.
[MPC][WARN] cannot set 'p_23' via known APIs; skipped.
[MPC][WARN] cannot set 'p_24' via known APIs; skipped.
[MPC][WARN] cannot set 'p_25' via known APIs; skipped.
[MPC][WARN] cannot set 'p_26' via known APIs; skipped.
[MPC][WARN] cannot set 'p_27' via known APIs; skipped.
[MPC] 초기화 완료
[Main] 제어 루프 시작
[Main] Waiting sensor values... required keys: ['temp', 'hum', 'co2', 'light']
[Main] Waiting sensor values... required keys: ['temp', 'hum', 'co2', 'light']
[MPC] Solve failed, fallback policy used: solve input formats all failed: Trying to solve the NLP with unspecified parameters: y_min_13, y_min_24, p_7, y_max_15, y_max_11, y_max_7, p_9, p_19, y_min_5, p_13, y_min_0, y_max_20, y_max_21, y_max_4, y_min_16, y_max_6, c_dy, y_min_4, y_max_9, y_max_12, y_min_6, c_y, y_max_0, y_min_3, y_min_17, y_max_8, y_min_18, y_max_1, oub, p_21, y_max_13, y_max_19, y_min_23, p_15, p_14, d, p_8, y_max_5, y_min_2, y_max_18, y_min_19, w, y_max_14, p_27, p_1, y_min_10, p_6, p_4, p_3, p_12, p_26, x_0, y_max_17, p_11, y_min_1, p_18, y_fin, y_min_9, y_min_12, olb, p_22, y_min_8, p_5, V0, p_16, p_2, p_20, y_min_20, y_min_21, p_0, y_min_11, y_min_15, y_max_24, p_24, c_u, y_max_16, y_max_23, p_17, y_min_14, p_10, p_25, y_max_10, y_max_22, y_max_3, y_min_22, y_min_7, y_max_2, p_23.
[Main] x=[19.45, 76.62, 655.4, 177.1] → cmd={'heater': 0.15500000000000008, 'humidifier': 0.0, 'co2_valve': 0.0, 'led': 1.0}
[MPC] Solve failed, fallback policy used: solve input formats all failed: Trying to solve the NLP with unspecified parameters: y_min_13, y_min_24, p_7, y_max_15, y_max_11, y_max_7, p_9, p_19, y_min_5, p_13, y_min_0, y_max_20, y_max_21, y_max_4, y_min_16, y_max_6, c_dy, y_min_4, y_max_9, y_max_12, y_min_6, c_y, y_max_0, y_min_3, y_min_17, y_max_8, y_min_18, y_max_1, oub, p_21, y_max_13, y_max_19, y_min_23, p_15, p_14, d, p_8, y_max_5, y_min_2, y_max_18, y_min_19, w, y_max_14, p_27, p_1, y_min_10, p_6, p_4, p_3, p_12, p_26, x_0, y_max_17, p_11, y_min_1, p_18, y_fin, y_min_9, y_min_12, olb, p_22, y_min_8, p_5, V0, p_16, p_2, p_20, y_min_20, y_min_21, p_0, y_min_11, y_min_15, y_max_24, p_24, c_u, y_max_16, y_max_23, p_17, y_min_14, p_10, p_25, y_max_10, y_max_22, y_max_3, y_min_22, y_min_7, y_max_2, p_23.
[Main] x=[25.22, 71.38, 638.9, 185.8] → cmd={'heater': 0.0, 'humidifier': 0.0, 'co2_valve': 0.5550000000000012, 'led': 1.0}
[MPC] Solve failed, fallback policy used: solve input formats all failed: Trying to solve the NLP with unspecified parameters: y_min_13, y_min_24, p_7, y_max_15, y_max_11, y_max_7, p_9, p_19, y_min_5, p_13, y_min_0, y_max_20, y_max_21, y_max_4, y_min_16, y_max_6, c_dy, y_min_4, y_max_9, y_max_12, y_min_6, c_y, y_max_0, y_min_3, y_min_17, y_max_8, y_min_18, y_max_1, oub, p_21, y_max_13, y_max_19, y_min_23, p_15, p_14, d, p_8, y_max_5, y_min_2, y_max_18, y_min_19, w, y_max_14, p_27, p_1, y_min_10, p_6, p_4, p_3, p_12, p_26, x_0, y_max_17, p_11, y_min_1, p_18, y_fin, y_min_9, y_min_12, olb, p_22, y_min_8, p_5, V0, p_16, p_2, p_20, y_min_20, y_min_21, p_0, y_min_11, y_min_15, y_max_24, p_24, c_u, y_max_16, y_max_23, p_17, y_min_14, p_10, p_25, y_max_10, y_max_22, y_max_3, y_min_22, y_min_7, y_max_2, p_23.
[Main] x=[23.42, 73.92, 623.7, 585.1] → cmd={'heater': 0.0, 'humidifier': 0.0, 'co2_valve': 1.0, 'led': 0.0}

